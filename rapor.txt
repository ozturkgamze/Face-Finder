PROJE RAPORU
Projede kullanılan teknolojiler:
•	OpenCV
•	Python
•	Flask
Çözüm Yöntemi:
İstenilen ödevde öncelikle yüz fotoğrafı yüklenmesi ve bu yüzün genel fotoğrafta bulunması istenildi. Bu nedenle ilk olarak düşündüğüm çözümde tekli yüz fotoğrafında yüzün bulunup bir matrise atılması gerektiği oldu. Daha sonra bu yüzün özelliklerinin tanınması ve genel fotoğrafta aynı şekilde yüzlerin bulunarak bu özelliklerin karşılaştırılması gerekiyordu. Karşılaştırılan yüzlerdeki benzerlik oranlarına göre ise aranılan kişinin tespiti gerçekleşecekti.
Buna göre öncelikle web arayüzünü geliştirdim. Daha sonra ise python, flask ve openCV ile backend kısmına geçtim.
Yukarıda belirttiğim işleri sırasıyla yapabilmek için ilk olarak yüz fotoğrafı yüklenir. Yüklenen bu fotoğrafta openCV yüz bulma fonksiyonuyla yüz bulunur. Bulunan yüzün özellik matrisi çıkarılır. Çıkarılan matris, openCV’nin LBPHFaceRecognizer_create() fonksiyonuyla eğitilip bir eğitim dosyası oluşturulur(trainner.yml). Artık bu dosya, verilen yüzün özellik matrisini kendinde barındırır ve bu özellik matrisiyle genel fotoğrafta eşleşen herhangi bir yüz bulunduğunda benzerlik oranı çıkarılır. Çıkarılan bu oran %90-%100 arasında ise bizim aradığımız yüzdür ve bu yüz kırmızı kare içerine alınır. Bu oranın altında kalan yüzler ise mavi kare içerisine alınır. 

Sistemin çalışması için gerekli olan modüller:
•	Pip install opencv-python
•	Pip install opencv-contrib-python
•	Pip install pillow –upgrade
•	Pip install numpy
•	Pip install flask
